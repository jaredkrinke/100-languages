(DEFINE COMMENT SECTOR-LISP SOLUTION TO EVEN-FIBONACCI-NUMBERS IN HEX)

(DEFINE T . T)

(DEFINE ZERO . (NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL))
(DEFINE ONE . (T NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL))
(DEFINE TWO . (NIL T NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL))

(DEFINE NOT . (LAMBDA (P) (COND (P NIL) (T T))))

(DEFINE REVERSE_ . (LAMBDA (A RESULT)
		     (COND (A (REVERSE_ (CDR A) (CONS (CAR A) RESULT)))
			   (T RESULT))))

(DEFINE REVERSE . (LAMBDA (A) (REVERSE_ A NIL)))

(DEFINE ADD-BINARY . (LAMBDA (A B CARRY)
		       (COND (A (COND (B (COND (CARRY (CONS T T))
					       (T (CONS NIL T))))
				      (T (COND (CARRY (CONS NIL T))
					       (T (CONS T NIL))))))
			     (T (COND (B (COND (CARRY (CONS NIL T))
					       (T (CONS T NIL))))
				      (T (COND (CARRY (CONS T NIL))
					       (T (CONS NIL NIL)))))))))

(DEFINE ADD_ . (LAMBDA (RESULT A B CARRY)
		 (COND (A ((LAMBDA (ADD-RESULT)
			     (ADD_ (CONS (CAR ADD-RESULT) RESULT)
				   (CDR A)
				   (CDR B)
				   (CDR ADD-RESULT)))
			   (ADD-BINARY (CAR A) (CAR B) CARRY)))
		       (T RESULT))))

(DEFINE ADD . (LAMBDA (A B) (REVERSE (ADD_ NIL A B NIL))))

(DEFINE LESS_ . (LAMBDA (A B RESULT)
		  (COND (A (LESS_ (CDR A)
				  (CDR B)
				  (COND ((EQ (CAR A) (CAR B)) RESULT)
					((CAR B) T)
					(T NIL))))
			(T RESULT))))

(DEFINE LESS . (LAMBDA (A B) (LESS_ A B NIL)))

(DEFINE FOUR-MILLION . (NIL NIL NIL NIL NIL NIL NIL NIL T NIL NIL T NIL NIL NIL NIL T NIL T T T T NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL))

(DEFINE EVENP . (LAMBDA (A) (NOT (CAR A))))

(DEFINE FIB_ . (LAMBDA (LIMIT SEQUENCE)
		 ((LAMBDA (NEXT)
		    (COND ((LESS NEXT LIMIT) (FIB_ LIMIT (CONS NEXT SEQUENCE)))
			  (T SEQUENCE)))
		  (ADD (CAR SEQUENCE) (CAR (CDR SEQUENCE))))))

(DEFINE FIB . (LAMBDA (LIMIT) (FIB_ LIMIT (CONS TWO (CONS ONE NIL)))))

(DEFINE EVEN-FIB_ . (LAMBDA (A SUM)
		      (COND (A (EVEN-FIB_ (CDR A)
					  (COND ((EVENP (CAR A)) (ADD SUM (CAR A)))
						(T SUM))))
			    (T SUM))))

(DEFINE EVEN-FIB . (LAMBDA (LIMIT) (EVEN-FIB_ (FIB LIMIT) ZERO)))

(DEFINE NIBBLE->HEX . (LAMBDA (A B C D)
			(COND (A (COND (B (COND (C (COND (D (QUOTE F))
							 (T (QUOTE 7))))
						(T (COND (D (QUOTE B))
							 (T (QUOTE 3))))))
				       (T (COND (C (COND (D (QUOTE D))
							 (T (QUOTE 5))))
						(T (COND (D (QUOTE 9))
							 (T (QUOTE 1))))))))
			      (T (COND (B (COND (C (COND (D (QUOTE E))
							 (T (QUOTE 6))))
						(T (COND (D (QUOTE A))
							 (T (QUOTE 2))))))
				       (T (COND (C (COND (D (QUOTE C))
							 (T (QUOTE 4))))
						(T (COND (D (QUOTE 8))
							 (T (QUOTE 0)))))))))))

(DEFINE BY-FOUR . (LAMBDA (A F)
		    (COND (A (CONS (F (CAR A)
				(CAR (CDR A))
				(CAR (CDR (CDR A)))
				(CAR (CDR (CDR (CDR A)))))
				   (BY-FOUR (CDR (CDR (CDR (CDR A))))
					    F)))
			  (T NIL))))

(DEFINE PRINT-HEX . (LAMBDA (A) (REVERSE (BY-FOUR A NIBBLE->HEX))))

(PRINT-HEX (EVEN-FIB FOUR-MILLION))
