(DEFINE COMMENT SECTOR-LISP SOLUTION TO EVEN-FIBONACCI-NUMBERS)

(DEFINE T . T)

(DEFINE ZERO . (NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL))
(DEFINE ONE . (T NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL))
(DEFINE TWO . (NIL T NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL))
(DEFINE TEN . (NIL T NIL T NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL))

(DEFINE NOT . (LAMBDA (P) (COND (P NIL) (T T))))

(DEFINE AND3 . (LAMBDA (A B C)
		 (COND (A (COND (B (COND (C T)
					 (T NIL)))
				(T NIL)))
		       (T NIL))))

(DEFINE REVERSE_ . (LAMBDA (A RESULT)
		     (COND (A (REVERSE_ (CDR A) (CONS (CAR A) RESULT)))
			   (T RESULT))))

(DEFINE REVERSE . (LAMBDA (A) (REVERSE_ A NIL)))

(DEFINE ADD-BINARY . (LAMBDA (A B CARRY)
		       (COND ((AND3 (NOT A) (NOT B) (NOT CARRY)) (CONS NIL NIL))
			     ((AND3 A (NOT B) (NOT CARRY)) (CONS T NIL))
			     ((AND3 (NOT A) B (NOT CARRY)) (CONS T NIL))
			     ((AND3 (NOT A) (NOT B) CARRY) (CONS T NIL))
			     ((AND3 A B (NOT CARRY)) (CONS NIL T))
			     ((AND3 (NOT A) B CARRY) (CONS NIL T))
			     ((AND3 A (NOT B) CARRY) (CONS NIL T))
			     ((AND3 A B CARRY) (CONS T T)))))

(DEFINE ADD_ . (LAMBDA (RESULT A B CARRY)
		 (COND (A ((LAMBDA (ADD-RESULT)
			     (ADD_ (CONS (CAR ADD-RESULT) RESULT)
				   (CDR A)
				   (CDR B)
				   (CDR ADD-RESULT)))
			   (ADD-BINARY (CAR A) (CAR B) CARRY)))
		       (T RESULT))))

(DEFINE ADD . (LAMBDA (A B) (REVERSE (ADD_ NIL A B NIL))))

(DEFINE INVERT . (LAMBDA (A)
		   (COND (A (CONS (NOT (CAR A))
				  (INVERT (CDR A))))
			 (T NIL))))

(DEFINE COMPLEMENT . (LAMBDA (A) (ADD (INVERT A) ONE)))

(DEFINE SUBTRACT . (LAMBDA (A B) (ADD A (COMPLEMENT B))))

(DEFINE LESS_ . (LAMBDA (A B RESULT)
		  (COND (A (LESS_ (CDR A)
				  (CDR B)
				  (COND ((EQ (CAR A) (CAR B)) RESULT)
					((CAR B) T)
					(T NIL))))
			(T RESULT))))

(DEFINE LESS . (LAMBDA (A B) (LESS_ A B NIL)))

(DEFINE DIVIDE_ . (LAMBDA (A B Q)
		    (COND ((LESS A B) (CONS Q A))
			  (T (DIVIDE_ (SUBTRACT A B) B (ADD ONE Q))))))

(DEFINE DIVIDE . (LAMBDA (A B) (DIVIDE_ A B ZERO)))

(DEFINE NTH . (LAMBDA (N LIST)
		(COND ((LESS N ONE) (CAR LIST))
		      (T (NTH (SUBTRACT N ONE) (CDR LIST))))))

(DEFINE DIGITS . (0 1 2 3 4 5 6 7 8 9))

(DEFINE NUMBER->DIGIT . (LAMBDA (N) (NTH N DIGITS)))

(DEFINE PRINT-NUMBER_ . (LAMBDA (A)
			  (COND ((LESS A ONE) NIL)
				(T ((LAMBDA (DIVIDE-RESULT)
				      (CONS (NUMBER->DIGIT (CDR DIVIDE-RESULT))
					    (PRINT-NUMBER_ (CAR DIVIDE-RESULT))))
				    (DIVIDE A TEN))))))

(DEFINE PRINT-NUMBER . (LAMBDA (A) (REVERSE (PRINT-NUMBER_ A))))

(DEFINE FOUR-MILLION . (NIL NIL NIL NIL NIL NIL NIL NIL T NIL NIL T NIL NIL NIL NIL T NIL T T T T NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL))

(DEFINE EVENP . (LAMBDA (A) (NOT (CAR A))))

(DEFINE FIB_ . (LAMBDA (LIMIT SEQUENCE)
		 ((LAMBDA (NEXT)
		    (COND ((LESS NEXT LIMIT) (FIB_ LIMIT (CONS NEXT SEQUENCE)))
			  (T SEQUENCE)))
		  (ADD (CAR SEQUENCE) (CAR (CDR SEQUENCE))))))

(DEFINE FIB . (LAMBDA (LIMIT) (FIB_ LIMIT (CONS TWO (CONS ONE NIL)))))

(DEFINE EVEN-FIB_ . (LAMBDA (A SUM)
		      (COND (A (EVEN-FIB_ (CDR A)
					  (COND ((EVENP (CAR A)) (ADD SUM (CAR A)))
						(T SUM))))
			    (T SUM))))

(DEFINE EVEN-FIB . (LAMBDA (LIMIT) (EVEN-FIB_ (FIB LIMIT) ZERO)))
